version: 2.1
orbs:
  slack: circleci/slack@3.4.2

references:
  cache_key_of_dependencies: &cache_key_of_dependencies dependencies-v{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
  
executors:
  node:
    docker:
      - image: circleci/node:10
  working_directory: ~/app

workflows:
  check_and_build:
    jobs:
      - check_and_build:
          filters:
            branches:
              ignore: /^release\/.*$/

  deploy_functions:
    jobs:
      - deploy_functions:
          filters:
            branches:
              only: release/functions

  deploy_entry_site:
    jobs:
      - deploy_entry_site:
          filters:
            branches:
              only: release/entry-site

  deploy_admin_site:
    jobs:
      - deploy_admin_site:
          filters:
            branches:
              only: release/admin-site
  
jobs:
  check_and_build:
    executor: node
    steps:
      - checkout
      - build_and_check
      - slack/status:
          fail_only: true
          webhook: '${SLACK_WEBHOOK}'
  deploy_functions:
    executor: node
    steps:
      - prepare_for_deploy
      - run:
          name: Deploy Functions
          command: "yarn deploy:functions"
      - slack/status:
          fail_only: false
          webhook: '${SLACK_WEBHOOK}'
  deploy_entry_site:
    executor: node
    steps:
      - prepare_for_deploy
      - run:
          name: Deploy entry-site
          command: "yarn deploy:hosting:entry-site"
      - slack/status:
          fail_only: false
          webhook: '${SLACK_WEBHOOK}'
  deploy_admin_site:
    executor: node
    steps:
      - prepare_for_deploy
      - run:
          name: Deploy admin-site
          command: "yarn deploy:hosting:admin-site"
      - slack/status:
          fail_only: false
          webhook: '${SLACK_WEBHOOK}'

commands:
  build_and_check:
    steps:
      - restore_cache:
          keys:
            - *cache_key_of_dependencies
      - run: yarn install
      - save_cache:
          key: *cache_key_of_dependencies
          paths:
            - node_modules
      - run: yarn build
      - run: yarn checks
  prepare_for_deploy:
    steps:
      - checkout
      - run:
          name: Prepare .npmrc
          command: 'echo $NPMRC | base64 -di > .npmrc'
      - build_and_check